import { BaseComponentOptions, VoiceCallCollectContract, CallingCallCollectResult, BaseComponent } from '@signalwire/core';
/**
 * Instances of this class allow you to control (e.g., resume) the
 * prompt inside a Voice Call. You can obtain instances of this class by
 * starting a Prompt from the desired {@link Call} (see
 * {@link Call.prompt})
 */
export interface CallCollect extends VoiceCallCollectContract {
}
export declare type CallCollectEventsHandlerMapping = {};
export interface CallCollectOptions extends BaseComponentOptions<CallCollectEventsHandlerMapping> {
}
export declare class CallCollectAPI extends BaseComponent<CallCollectEventsHandlerMapping> implements VoiceCallCollectContract {
    protected _eventsPrefix: "calling";
    callId: string;
    nodeId: string;
    controlId: string;
    result?: CallingCallCollectResult;
    get id(): string;
    get type(): "error" | "digit" | "no_input" | "no_match" | "start_of_input" | "speech" | undefined;
    /**
     * User-friendly alias to understand the reason in case of errors
     * no_match | no_input | error
     */
    get reason(): "error" | "digit" | "no_input" | "no_match" | "start_of_input" | "speech" | undefined;
    get digits(): string | undefined;
    get terminator(): string | undefined;
    get text(): string | undefined;
    get confidence(): number | undefined;
    stop(): Promise<this>;
    startInputTimers(): Promise<this>;
    ended(): Promise<this>;
}
export declare const createCallCollectObject: (params: CallCollectOptions) => CallCollect;
//# sourceMappingURL=CallCollect.d.ts.map